{"version":3,"file":"static/js/387.c2bc5ce7.chunk.js","mappings":"ySAEaA,EAAWC,EAAAA,EAAAA,GAAH,yFAMRC,EAAWD,EAAAA,EAAAA,GAAH,0LAURE,EAAUF,EAAAA,EAAAA,IAAH,yCAGPG,EAAYH,EAAAA,EAAAA,GAAH,2GAMTI,EAAYJ,EAAAA,EAAAA,EAAH,4C,wJCzBTK,E,QAAcL,EAAAA,GAAH,mJ,mBCiCxB,EA7BgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BC,EAAAA,EAAAA,IAAgBH,GAF9C,gBAEYI,EAFZ,EAEYA,QACRL,EAAWK,GAHf,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACP,KAGF,wBACGF,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACf,EAAD,YACE,UAAC,KAAD,sBAAoBc,MACpB,SAAC,KAAD,UAAYC,MAFIF,EADP,KAQlB,C,mMC/BDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAe,mCAAG,sGACNF,EAAAA,EAAAA,IAAA,sCAAyCC,IADnC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKfC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACoBI,EADpB,YADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAY,mCAAG,WAAMlB,GAAN,yFACHY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBAAuCa,IADpC,uBAClBE,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZI,EAAY,mCAAG,WAAMnB,GAAN,yFACHY,EAAAA,EAAAA,IAAA,iBACXZ,EADW,4BACgBa,IAFb,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZZ,EAAe,mCAAG,WAAMH,GAAN,yFACNY,EAAAA,EAAAA,IAAA,iBACXZ,EADW,4BACgBa,IAFV,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0;\n  gap: 5px;\n`;\nexport const CastItem = styled.li`\n  text-align: center;\n  padding: 5px;\n  background-color: #1d2830;\n  flex-basis: calc((100% - 50px) / 10);\n\n  :hover {\n    background-color: #23313a;\n  }\n`;\nexport const CastImg = styled.img`\n  width: 179px;\n`;\nexport const TitleName = styled.h2`\n  font-size: 20px;\n  font-weight: 500;\n  color: #75b8bf;\n  margin-bottom: 8px;\n`;\nexport const Paragraph = styled.p`\n  color: #75b8bf94;\n`;\n","import styled from '@emotion/styled';\n\nexport const ReviewsItem = styled.li`\n  background-color: #1d2830;\n  margin-bottom: 20px;\n  padding: 10px;\n\n  :hover {\n    background-color: #23313a;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/Api';\nimport { ReviewsItem } from './Reviews.styled';\nimport { Paragraph, TitleName } from 'components/Cast/Cast.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function addMovieReviews() {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    addMovieReviews();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <ReviewsItem key={id}>\n          <TitleName>Author: {author}</TitleName>\n          <Paragraph>{content}</Paragraph>\n        </ReviewsItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '3d8b97d0f6e631ee52451d149da311a3';\n\nexport const getMoviesTrends = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${MY_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${MY_KEY}&query=${query}&page=1`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${MY_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n"],"names":["CastList","styled","CastItem","CastImg","TitleName","Paragraph","ReviewsItem","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","results","console","log","addMovieReviews","map","id","author","content","axios","MY_KEY","getMoviesTrends","data","getSearchMovies","query","getMovieById","getMovieCast"],"sourceRoot":""}