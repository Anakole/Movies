{"version":3,"file":"static/js/393.d850cc87.chunk.js","mappings":"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","sources":["components/TrendsList/TrendsList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const TrendsTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  color: #75b8bf;\n  margin: 20px;\n`;\n\nexport const ListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0;\n  gap: 5px;\n`;\n\nexport const MovieCard = styled.li`\n  padding: 5px;\n  background-color: #1d2830;\n  flex-basis: calc((100% - 50px) / 10);\n\n  :hover {\n    background-color: #23313a;\n  }\n`;\n\nexport const PosterStyled = styled.img`\n  width: 289px;\n  height: 433px;\n`;\n\nexport const MovieName = styled.h2`\n  font-size: 16px;\n  line-height: 1.6;\n  font-weight: 500;\n  color: #75b8bf;\n`;\n\nexport const StyledListLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n`;\n","import {\n  ListStyled,\n  MovieCard,\n  MovieName,\n  PosterStyled,\n  StyledListLink,\n} from 'components/TrendsList/TrendsList.styled';\n\nexport const MoviesList = ({ movies, movieName }) => {\n  return (\n    <ListStyled>\n      {movies.map(({ poster_path, id, original_title }) => (\n        <MovieCard key={id}>\n          <StyledListLink\n            to={`/movies/${id}`}\n            state={{ from: `/movies?query=${movieName}` }}\n          >\n            <PosterStyled\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={original_title}\n            />\n            <MovieName>{original_title}</MovieName>\n          </StyledListLink>\n        </MovieCard>\n      ))}\n    </ListStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 50px;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\n  color: #75b8bf;\n  font-size: 16px;\n  background: #11181c;\n  border: 2px solid #1d2830;\n  padding: 10px;\n  width: 400px;\n  height: 20px;\n`;\n\nexport const SearchButton = styled.button`\n  background: #1d2830;\n  color: #75b8bf;\n  border: none;\n  width: 60px;\n  height: 44px;\n\n  & svg {\n    width: 1.5em;\n    height: 1.5em;\n  }\n\n  :hover {\n    background-color: #23313a;\n  }\n`;\n","import { BiSearch } from 'react-icons/bi';\nimport { Form, Input, SearchButton } from './SearchForm.styled';\n\nexport const SearchForm = ({ value, onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(e.target.elements.query.value);\n    e.target.elements.query.value = '';\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"query\" defaultValue={value} />\n      <SearchButton type=\"submit\">\n        <BiSearch />\n      </SearchButton>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StartSearch = styled.div`\n  display: flex;\n  justify-content: center;\n  color: #75b8bf;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/Api';\nimport { StartSearch } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearcnParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n\n    async function addSearchMovies() {\n      try {\n        const { results } = await getSearchMovies(\n          movieName.toLowerCase().trim()\n        );\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    addSearchMovies();\n  }, [movieName]);\n\n  const handleFormSubmit = query => {\n    setSearcnParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchForm value={movieName} onSubmit={handleFormSubmit} />\n      {movies.length !== 0 ? (\n        <MoviesList movies={movies} movieName={movieName} />\n      ) : (\n        <StartSearch>Start searching for a movie</StartSearch>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '3d8b97d0f6e631ee52451d149da311a3';\n\nexport const getMoviesTrends = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${MY_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${MY_KEY}&query=${query}&page=1`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${MY_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n"],"names":["TrendsTitle","styled","ListStyled","MovieCard","PosterStyled","MovieName","StyledListLink","NavLink","MoviesList","movies","movieName","map","poster_path","id","original_title","to","state","from","src","alt","Form","Input","SearchButton","SearchForm","value","onSubmit","e","preventDefault","target","elements","query","type","name","defaultValue","StartSearch","useState","setMovies","useSearchParams","searchParams","setSearcnParams","get","useEffect","getSearchMovies","toLowerCase","trim","results","console","log","addSearchMovies","length","axios","MY_KEY","getMoviesTrends","data","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}