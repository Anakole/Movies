{"version":3,"file":"static/js/257.e304fce8.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60px;\n  padding: 10px;\n  background: #1d2830;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: #75b8bf;\n  margin: 15px 0;\n\n  & svg {\n    width: 1.5em;\n    height: 1.5em;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  margin: 0 60px;\n  height: 100vh;\n`;\n\nexport const DetailsImg = styled.img`\n  width: 500px;\n  margin-right: 40px;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  align-items: start;\n`;\n\nexport const DetailsTable = styled.div`\n  border-collapse: collapse;\n  width: 100%;\n`;\n\nexport const DetailsLine = styled.div`\n  display: flex;\n  font-size: 20px;\n`;\n\nexport const DetailsTitle = styled.h1`\n  background: #1d2830;\n  color: #75b8bf;\n  margin: 0;\n  padding: 20px;\n  text-align: left;\n`;\n\nexport const DetailsOptions = styled.p`\n  width: 90px;\n  color: #75b8bf94;\n  font-weight: 500;\n  padding: 20px;\n`;\n\nexport const DetailsText = styled.p`\n  color: #75b8bf;\n  font-weight: 400;\n  padding: 20px;\n`;\n\nexport const DetailsNav = styled.nav`\n  display: flex;\n  gap: 16px;\n  margin: 30px 0;\n`;\n\nexport const DetailsLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  width: 100px;\n  padding: 20px;\n  color: #75b8bf;\n  font-size: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  background-color: #23313a;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { getMovieById } from 'services/Api';\nimport {\n  BackLink,\n  Details,\n  DetailsContainer,\n  DetailsImg,\n  DetailsLink,\n  DetailsNav,\n  DetailsOptions,\n  DetailsTable,\n  DetailsText,\n  DetailsTitle,\n  DetailsLine,\n} from './MovieDetails.styled';\n\nimport moviePoster from 'components/img/movie-poster.jpg';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function addMovieById() {\n      try {\n        const movie = await getMovieById(movieId);\n        setMovie(movie);\n        setGenres(movie.genres);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    addMovieById();\n  }, [movieId]);\n\n  const { original_title, poster_path, vote_average, overview, release_date } =\n    movie;\n  const posterLink = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <DetailsContainer>\n      <BackLink to={backLink}>\n        <BsArrowLeftShort />\n        Back\n      </BackLink>\n      <Details>\n        <DetailsImg\n          src={poster_path !== null ? posterLink : moviePoster}\n          alt={original_title}\n        />\n        <div>\n          <DetailsTitle>\n            {original_title} ({new Date(release_date).getFullYear()})\n          </DetailsTitle>\n          <DetailsTable>\n            <DetailsLine>\n              <DetailsOptions>User score:</DetailsOptions>\n              <DetailsText>{Math.round(vote_average * 10)}%</DetailsText>\n            </DetailsLine>\n            <DetailsLine>\n              <DetailsOptions>Genres:</DetailsOptions>\n              <DetailsText>\n                {genres.map(({ name }) => name).join(', ')}\n              </DetailsText>\n            </DetailsLine>\n            <DetailsLine>\n              <DetailsOptions>Overview:</DetailsOptions>\n              <DetailsText>{overview}</DetailsText>\n            </DetailsLine>\n          </DetailsTable>\n          <DetailsNav>\n            <DetailsLink to=\"cast\" state={{ from: backLink }}>\n              Cast\n            </DetailsLink>\n            <DetailsLink to=\"reviews\" state={{ from: backLink }}>\n              Reviews\n            </DetailsLink>\n          </DetailsNav>\n          <Suspense fallback={<div>Load more...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </Details>\n    </DetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '3d8b97d0f6e631ee52451d149da311a3';\n\nexport const getMoviesTrends = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${MY_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${MY_KEY}&query=${query}&page=1`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${MY_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n"],"names":["BackLink","styled","NavLink","DetailsContainer","DetailsImg","Details","DetailsTable","DetailsLine","DetailsTitle","DetailsOptions","DetailsText","DetailsNav","DetailsLink","useState","movie","setMovie","genres","setGenres","movieId","useParams","backLink","useLocation","state","from","useEffect","getMovieById","console","log","addMovieById","original_title","poster_path","vote_average","overview","release_date","posterLink","to","src","moviePoster","alt","Date","getFullYear","Math","round","map","name","join","Suspense","fallback","axios","MY_KEY","getMoviesTrends","data","getSearchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}