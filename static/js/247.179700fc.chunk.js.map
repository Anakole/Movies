{"version":3,"file":"static/js/247.179700fc.chunk.js","mappings":"kOA4CA,UAjCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE2BC,EAAAA,EAAAA,IAAaH,GAFxC,gBAEYF,EAFZ,EAEYA,KACRC,EAAQD,GAHZ,gDAKIM,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACN,KAGF,SAAC,KAAD,UACGF,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,KAEP,SAAC,KAAD,UAAYA,KACZ,SAAC,KAAD,UAAYC,MANCF,EADP,KAYf,C,uLCxCYM,EAAWC,EAAAA,EAAAA,GAAH,yFAMRC,EAAWD,EAAAA,EAAAA,GAAH,0LAURE,EAAUF,EAAAA,EAAAA,IAAH,yCAGPG,EAAYH,EAAAA,EAAAA,GAAH,2GAMTI,EAAYJ,EAAAA,EAAAA,EAAH,4C,+LCzBtBK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAe,mCAAG,sGACNF,EAAAA,EAAAA,IAAA,sCAAyCC,IADnC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKfC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACoBI,EADpB,YADM,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAY,mCAAG,WAAM1B,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,oBAAuCqB,IADpC,uBAClBE,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZpB,EAAY,mCAAG,WAAMH,GAAN,yFACHoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,4BACgBqB,IAFb,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZI,EAAe,mCAAG,WAAM3B,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,iBACXpB,EADW,4BACgBqB,IAFV,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx","services/Api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/Api';\nimport {\n  Paragraph,\n  CastImg,\n  CastItem,\n  CastList,\n  TitleName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function addMovieCast() {\n      try {\n        const { cast } = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    addMovieCast();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.map(({ cast_id, name, character, profile_path }) => (\n        <CastItem key={cast_id}>\n          <CastImg\n            src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n            alt={name}\n          />\n          <TitleName>{name}</TitleName>\n          <Paragraph>{character}</Paragraph>\n        </CastItem>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0;\n  gap: 5px;\n`;\nexport const CastItem = styled.li`\n  text-align: center;\n  padding: 5px;\n  background-color: #1d2830;\n  flex-basis: calc((100% - 50px) / 10);\n\n  :hover {\n    background-color: #23313a;\n  }\n`;\nexport const CastImg = styled.img`\n  width: 170px;\n`;\nexport const TitleName = styled.h2`\n  font-size: 20px;\n  font-weight: 500;\n  color: #75b8bf;\n  margin-bottom: 8px;\n`;\nexport const Paragraph = styled.p`\n  color: #75b8bf94;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '3d8b97d0f6e631ee52451d149da311a3';\n\nexport const getMoviesTrends = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${MY_KEY}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${MY_KEY}&query=${query}&page=1`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${MY_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${MY_KEY}`\n  );\n\n  return data;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","console","log","addMovieCast","map","cast_id","name","character","profile_path","src","alt","CastList","styled","CastItem","CastImg","TitleName","Paragraph","axios","MY_KEY","getMoviesTrends","data","getSearchMovies","query","getMovieById","getMovieReviews"],"sourceRoot":""}